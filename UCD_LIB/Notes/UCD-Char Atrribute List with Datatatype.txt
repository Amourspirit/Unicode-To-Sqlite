s=String
d=decimal
b=boolean
i=integer
===============================================================================================
Usage: run regex several time ( one for each datatype) and to a replace. After a find and replace
is done copy the results back to the search window and preforme the next find an replace. Repeat
this procedure until all datatypes have had find and replace on them.
The followeing example was created int Expresso. Compiled, Multiline and culture invariant were on.
Regex:		b:([0-9A-Za-z_-]*)
Replace:	ciDic["$1"] = Convert.ToInt32(ci.$1);
--copy results from Replaced Text back to sample text--
Regex:		[d|i|s]:([0-9A-Za-z_-]*)				Matches decimal, integer and string
Replace:	ciDic["$1"] = ci.$1;
--Results look someting like this:--
ciDic["jg"] = ci.jg;
ciDic["ea"] = Convert.ToInt32(ci.ea);
ciDic["lb"] = ci.lb;
ciDic["sc"] = ci.sc;
ciDic["scx"] = ci.scx;
ciDic["Dash"] = Convert.ToInt32(ci.Dash);
===============================================================================================
i:cp
i:first-cp
i:last-cp
d:age
s:na
s:JSN
s:gc
i:ccc
s:dt
s:dm
s:nt
s:nv
s:bc
s:bpt
s:bpb
b:Bidi_M
s:bmg
s:suc
s:slc
s:stc
s:uc
s:lc
s:tc
s:scf
s:cf
s:jt
s:jg
b:ea
s:lb
s:sc
s:scx
b:Dash
b:WSpace
b:Hyphen
b:QMark
b:Radical
b:Ideo
b:UIdeo
b:IDSB
b:IDST
s:hst
b:DI
b:ODI
b:Alpha
b:OAlpha
b:Upper
b:OUpper
b:Lower
b:OLower
b:Math
b:OMath
b:Hex
b:AHex
b:NChar
b:VS
b:Bidi_C
b:Join_C
b:Gr_Base
b:Gr_Ext
b:OGr_Ext
b:Gr_Link
b:STerm
b:Ext
b:Term
b:Dia
b:Dep
b:IDS
b:OIDS
b:XIDS
b:IDC
b:OIDC
b:XIDC
b:SD
b:LOE
b:Pat_WS
b:Pat_Syn
s:GCB
s:WB
s:SB
b:CE
b:Comp_Ex
b:NFC_QC
b:NFD_QC
b:NFKC_QC
b:NFKD_QC
b:XO_NFC
b:XO_NFD
b:XO_NFKC
b:XO_NFKD
s:FC_NFKC
b:CI
b:Cased
b:CWCF
b:CWCM
b:CWKCF
b:CWL
b:CWT
b:CWU
s:NFKC_CF
s:InSC
s:InMC
s:blk
s:isc
s:na1