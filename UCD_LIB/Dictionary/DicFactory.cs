using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using UCD.Repertoire;

namespace UCD.Dictionary
{
    public class DicFactory
    {
        public static Dictionary<string, object> CharDic(CharItem ci)
        {
            var ciDic = new Dictionary<string, object>();
            ciDic["cp"] = ci.cp;
            ciDic["age"] = ci.age;
            ciDic["na"] = ci.na;
            ciDic["JSN"] = ci.JSN;
            ciDic["gc"] = ci.gc;
            ciDic["ccc"] = ci.ccc;
            ciDic["dt"] = ci.dt;
            ciDic["dm"] = ci.dm;
            ciDic["nt"] = ci.nt;
            ciDic["nv"] = ci.nv;
            ciDic["bc"] = ci.bc;
            ciDic["bpt"] = ci.bpt;
            ciDic["bpb"] = ci.bpb;
            ciDic["Bidi_M"] = Convert.ToInt32(ci.Bidi_M);
            ciDic["bmg"] = ci.bmg;
            ciDic["suc"] = ci.suc;
            ciDic["slc"] = ci.slc;
            ciDic["stc"] = ci.stc;
            ciDic["uc"] = ci.uc;
            ciDic["lc"] = ci.lc;
            ciDic["tc"] = ci.tc;
            ciDic["scf"] = ci.scf;
            ciDic["cf"] = ci.cf;
            ciDic["jt"] = ci.jt;
            ciDic["jg"] = ci.jg;
            ciDic["ea"] = Convert.ToInt32(ci.ea);
            ciDic["lb"] = ci.lb;
            ciDic["sc"] = ci.sc;
            ciDic["scx"] = ci.scx;
            ciDic["Dash"] = Convert.ToInt32(ci.Dash);
            ciDic["WSpace"] = Convert.ToInt32(ci.WSpace);
            ciDic["Hyphen"] = Convert.ToInt32(ci.Hyphen);
            ciDic["QMark"] = Convert.ToInt32(ci.QMark);
            ciDic["Radical"] = Convert.ToInt32(ci.Radical);
            ciDic["Ideo"] = Convert.ToInt32(ci.Ideo);
            ciDic["UIdeo"] = Convert.ToInt32(ci.UIdeo);
            ciDic["IDSB"] = Convert.ToInt32(ci.IDSB);
            ciDic["IDST"] = Convert.ToInt32(ci.IDST);
            ciDic["hst"] = ci.hst;
            ciDic["DI"] = Convert.ToInt32(ci.DI);
            ciDic["ODI"] = Convert.ToInt32(ci.ODI);
            ciDic["Alpha"] = Convert.ToInt32(ci.Alpha);
            ciDic["OAlpha"] = Convert.ToInt32(ci.OAlpha);
            ciDic["Upper"] = Convert.ToInt32(ci.Upper);
            ciDic["OUpper"] = Convert.ToInt32(ci.OUpper);
            ciDic["Lower"] = Convert.ToInt32(ci.Lower);
            ciDic["OLower"] = Convert.ToInt32(ci.OLower);
            ciDic["Math"] = Convert.ToInt32(ci.Math);
            ciDic["OMath"] = Convert.ToInt32(ci.OMath);
            ciDic["Hex"] = Convert.ToInt32(ci.Hex);
            ciDic["AHex"] = Convert.ToInt32(ci.AHex);
            ciDic["NChar"] = Convert.ToInt32(ci.NChar);
            ciDic["VS"] = Convert.ToInt32(ci.VS);
            ciDic["Bidi_C"] = Convert.ToInt32(ci.Bidi_C);
            ciDic["Join_C"] = Convert.ToInt32(ci.Join_C);
            ciDic["Gr_Base"] = Convert.ToInt32(ci.Gr_Base);
            ciDic["Gr_Ext"] = Convert.ToInt32(ci.Gr_Ext);
            ciDic["OGr_Ext"] = Convert.ToInt32(ci.OGr_Ext);
            ciDic["Gr_Link"] = Convert.ToInt32(ci.Gr_Link);
            ciDic["STerm"] = Convert.ToInt32(ci.STerm);
            ciDic["Ext"] = Convert.ToInt32(ci.Ext);
            ciDic["Term"] = Convert.ToInt32(ci.Term);
            ciDic["Dia"] = Convert.ToInt32(ci.Dia);
            ciDic["Dep"] = Convert.ToInt32(ci.Dep);
            ciDic["IDS"] = Convert.ToInt32(ci.IDS);
            ciDic["OIDS"] = Convert.ToInt32(ci.OIDS);
            ciDic["XIDS"] = Convert.ToInt32(ci.XIDS);
            ciDic["IDC"] = Convert.ToInt32(ci.IDC);
            ciDic["OIDC"] = Convert.ToInt32(ci.OIDC);
            ciDic["XIDC"] = Convert.ToInt32(ci.XIDC);
            ciDic["SD"] = Convert.ToInt32(ci.SD);
            ciDic["LOE"] = Convert.ToInt32(ci.LOE);
            ciDic["Pat_WS"] = Convert.ToInt32(ci.Pat_WS);
            ciDic["Pat_Syn"] = Convert.ToInt32(ci.Pat_Syn);
            ciDic["GCB"] = ci.GCB;
            ciDic["WB"] = ci.WB;
            ciDic["SB"] = ci.SB;
            ciDic["CE"] = Convert.ToInt32(ci.CE);
            ciDic["Comp_Ex"] = Convert.ToInt32(ci.Comp_Ex);
            ciDic["NFC_QC"] = Convert.ToInt32(ci.NFC_QC);
            ciDic["NFD_QC"] = Convert.ToInt32(ci.NFD_QC);
            ciDic["NFKC_QC"] = Convert.ToInt32(ci.NFKC_QC);
            ciDic["NFKD_QC"] = Convert.ToInt32(ci.NFKD_QC);
            ciDic["XO_NFC"] = Convert.ToInt32(ci.XO_NFC);
            ciDic["XO_NFD"] = Convert.ToInt32(ci.XO_NFD);
            ciDic["XO_NFKC"] = Convert.ToInt32(ci.XO_NFKC);
            ciDic["XO_NFKD"] = Convert.ToInt32(ci.XO_NFKD);
            ciDic["FC_NFKC"] = ci.FC_NFKC;
            ciDic["CI"] = Convert.ToInt32(ci.CI);
            ciDic["Cased"] = Convert.ToInt32(ci.Cased);
            ciDic["CWCF"] = Convert.ToInt32(ci.CWCF);
            ciDic["CWCM"] = Convert.ToInt32(ci.CWCM);
            ciDic["CWKCF"] = Convert.ToInt32(ci.CWKCF);
            ciDic["CWL"] = Convert.ToInt32(ci.CWL);
            ciDic["CWT"] = Convert.ToInt32(ci.CWT);
            ciDic["CWU"] = Convert.ToInt32(ci.CWU);
            ciDic["NFKC_CF"] = ci.NFKC_CF;
            ciDic["InSC"] = ci.InSC;
            ciDic["InMC"] = ci.InMC;
            ciDic["blk"] = ci.blk;
            ciDic["isc"] = ci.isc;
            ciDic["na1"] = ci.na1;

            return ciDic;
        }
    }
}